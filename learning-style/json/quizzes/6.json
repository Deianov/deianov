{"exercise":{"id":6,"path":"quizzes/6","name":"Advanced Functions","category":"JavaScript Advanced","description":"January 2021","source":"Online-Course","sourceUrl":"https://softuni.bg/modules/76/js-advanced","author":"Softuni","authorUrl":"https://softuni.bg/","createdBy":null},"props":{"level":"ADVANCED","lang":"BG"},"correct":[1,1,7,2,2,1,1,1,3,1,1,1,4,2],"questions":[{"text":"Как можем да достъпим контекста на изпълнение на дадена функция?","value":0,"answers":[{"text":"Чрез `this`","value":1},{"text":"Чрез `that`","value":2},{"text":"Чрез `arguments`","value":4},{"text":"Чрез `prototype`","value":8}]},{"text":"Arrow-функциите запазват контекста на изпълнение, в който са декларирани, независимо от къде се изпълняват.","value":1,"answers":[{"text":"True","value":1},{"text":"False","value":2}]},{"text":"Отбележете вариантите за контекст на изпълнение:","value":2,"answers":[{"text":"Глобално изпълнение","value":1},{"text":"Като метод на обект","value":2},{"text":"Като слушател на събитие в DOM","value":4},{"text":"Overload на фунцкия","value":8},{"text":"Като виртуален метод","value":16}]},{"text":"Кой метод за посочване на контекста на изпълнение приема аргументите като масив?","value":3,"answers":[{"text":"`call()`","value":1},{"text":"`apply()`","value":2},{"text":"`bind()`","value":4}]},{"text":"Как се подават аргументите чрез метода `call()`?","value":4,"answers":[{"text":"Като масив","value":1},{"text":"Като отделни елементи","value":2},{"text":"Като JSON","value":4},{"text":"Не можем да подаваме аргументи","value":8}]},{"text":"Функциите като първокласни елементи на езика означава:","value":5,"answers":[{"text":"Можем да ги третираме като стойности","value":1},{"text":"Приемат само един аргумент","value":2},{"text":"Винаги връщат стойност","value":4},{"text":"Можем да ги заменим с резултата от тяхното изпълнение","value":8}]},{"text":"Функциите могат да връщат като резултат други функции.","value":6,"answers":[{"text":"True","value":1},{"text":"False","value":2}]},{"text":"Кой термин отговяра на определението \"Функция, която приема като аргумент друга функция, или връща като резултат друга функция\"?","value":7,"answers":[{"text":"Функция от по-висок ред","value":1},{"text":"Функкция на втора степен","value":2},{"text":"Сложна функция","value":4},{"text":"Не съществува еквивалент в JavaScript","value":8}]},{"text":"Кои са свойствата на \"чистите\" функции (pure functions)?","value":8,"answers":[{"text":"При едни и същи аргументи връщат еднакъв резултат","value":1},{"text":"Нямат странични ефекти","value":2},{"text":"Не съдържат променливи","value":4},{"text":"Не са част от обект","value":8},{"text":"Част са от обект","value":16}]},{"text":"Как наричаме свойството на вложена функция да вижда обхвата (scope), в който е декларирана?","value":9,"answers":[{"text":"Closure","value":1},{"text":"Dereference","value":2},{"text":"Inheritance","value":4},{"text":"Overloading","value":8}]},{"text":"Какъв ще е резултата от изпълнението на следния код:\n```\nfunction outer() {\n  let a = 5;\n  \n  function innerA() {\n    a = 6;\n  }\n  function innerB() {\n    console.log(a);\n  }\n\n  return {\n    innerA,\n    innerB\n  };\n}\n\nconst result = outer();\nresult.innerA();\nresult.innerB();\n```","value":10,"answers":[{"text":"Числото 6 в конзолата","value":1},{"text":"Числото 5 в конзолата","value":2},{"text":"undefined в конзолата","value":4},{"text":"Грешка при изпълнение","value":8},{"text":"Грешка при компилация","value":16}]},{"text":"Как наричаме следния израз:\n```\n(function() => {\n  let name = 'Peter';\n  return name;\n})();\n```","value":11,"answers":[{"text":"IIFE","value":1},{"text":"Closure","value":2},{"text":"Higher-order function","value":4},{"text":"Predicate","value":8}]},{"text":"На кой ред се извършва частично прилагане (partial application) на аргументи:\n```\nconst person = { name: 'Peter' };\n\nfunction sayHi() {\n  console.log(this.name + ' says hi');\n}\n\nfunction sum(a, b)  {\n  return a + b;\n}\n\nconst increment = sum.bind(null, 1);\nconst greet = sayHi.bind(person);\n```","value":12,"answers":[{"text":"1","value":1},{"text":"7-9","value":2},{"text":"11","value":4},{"text":"12","value":8}]},{"text":"Currying и Partial Application са едно и също нещо.","value":13,"answers":[{"text":"True","value":1},{"text":"False","value":2}]}]}